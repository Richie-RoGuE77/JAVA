1. Write a Java program to find prime numbers   between 1 to n.
Program:
import java.util.*;
class Prime {
      public static void main(String arg[]) {
      int i,count;
      System.out.print("Enter n value : ");
      Scanner sc=new Scanner(System.in);
      int n=sc.nextInt();
      System.out.println("Prime numbers between 1 to "+n+" are ");
      for(int j=2;j<=n;j++) {
      count=0;
      for(i=1;i<=j;i++) {
      if(j%i==0) 
      count++;
      }
      if(count==2)
      System.out.print(j+"  ");
      }
      }
      }

Output :








2. Write a Java program that prints all real solutions to the quadratic equation ax2+bx+c=0. Read in a, b, c  and use the quadratic formula.
import java.util.*;
class Quad {
public static void main(String args[]) {
int a,b,c,d,f=0;
Scanner scr=new Scanner(System.in);
System.out.println("\nEnter the values of a ,b ,c : ");
a=scr.nextInt();
b=scr.nextInt();
c=scr.nextInt();
d=(b*b)-(4*a*c);
if(d==0) {
      System.out.println("Roots are real and Equal");
      f=1;
}
else if(d>0)
{
      System.out.println("Roots are real and UnEqual");
      f=1;
}
else
      System.out.println("Roots are imaginary");
      if(f==1)
      {
      float r1=(float)(-b+Math.sqrt(d))/(2*a);
      float r2=(float)(-b-Math.sqrt(d))/(2*a);
      System.out.println("Roots are :   "+r1+" ,"+r2);
      }
}
}
Output :

3. Develop a Java application to generate Electricity bill. If the type of the EB connection is domestic, calculate the amount to be paid as follows:
?	First 100 units - Rs. 1 per unit
?	101-200 units - Rs. 2.50 per unit
?	201 -500 units - Rs. 4 per unit
?	> 501 units - Rs. 6 per unit
If the type of the EB connection is commercial, calculate the amount to be paid as follows :
?	First 100 units - Rs. 2 per unit
?	101-200 units - Rs. 4.50 per unit
?	201 -500 units - Rs. 6 per unit
?	> 501 units - Rs. 7 per unit

import java.util.Scanner;
class ElectBill
{
int ConsumerNo;
String ConsumerName;
int PrevReading;
int CurrReading;
String EBConn;
double Bill;
void input_data()
{
Scanner sc = new Scanner(System.in);
System.out.println("\n Enter Consumer Number: ");
ConsumerNo = sc.nextInt();
System.out.println("\n Enter Consumer Name: ");
ConsumerName = sc.next(); 
System.out.println("\n Enter Previous Units: ");
PrevReading = sc.nextInt();
System.out.println("Enter Current Units consumed:");
CurrReading = sc.nextInt();
System.out.println("Enter the types of EB Connection(domestic or commercial)");
EBConn = sc.next();
}
double calculate_bill()
{
int choice;
if(EBConn=="domenstic")
choice=1;
else
choice=2;
switch(choice)
{
case 1:
if(CurrReading>=0 && CurrReading<=100) Bill=CurrReading*1;
else if(CurrReading>100 && CurrReading <= 200) Bill=(100*1)+((CurrReading-100)*2.50);
else if(CurrReading>200 && CurrReading <= 500) Bill=(100*1)+(100*2.50)+((CurrReading-200)*4);
else
Bill=(100*1)+(100*2.50)+(300*4)+((CurrReading-500)*6);
break; 
case 2:
if(CurrReading>=0 && CurrReading<=100) Bill=CurrReading*2;
else if(CurrReading>100 && CurrReading <= 200) Bill=(100*1)+((CurrReading-100)*4.50);
else if(CurrReading>200 && CurrReading <= 500) Bill=(100*1)+(100*2.50)+((CurrReading-200)*6);
else
Bill=(100*1)+(100*2.50)+(300*4)+((CurrReading-500)*7);

break;
}
return Bill;
}
void display()
{
System.out.println(" 	"); System.out.println("ELCTRICITY BILL");
System.out.println(" 	"); System.out.println("Consumer Number: "+ConsumerNo); System.out.println("Consumer Name: "+ConsumerName);
System.out.println("Consumer Previous Units: "+PrevReading);
System.out.println("Consumer Current Units: "+CurrReading);
System.out.println("Type of EBConnection: "+EBConn);
System.out.println(" 	");
System.out.println("Total Amount(Rs.): "+Bill);
}
}
class ElectBillGen
{
public static void main (String[] args)
{
ElectBill b=new ElectBill();
b.input_data();
b.calculate_bill();
b.display();
}
}

Output :










4. Write a Java program to multiply two given matrices.


Program :
import java.util.Scanner;
public class Matrix {
      public static void main(String args[]) {
      int n;
      Scanner input = new Scanner(System.in);
      System.out.println("Enter base of matrices");
      n = input.nextInt();
      int[][] m1 = new int[n][n];
      int[][] m2 = new int[n][n];
      int[][] mat = new int[n][n];
      System.out.println("Enter the elements of 1st matrix row wise : n");
      for (int i = 0; i < n; i++) {
      for(int j = 0; j < n; j++) {
      m1[i][j] = input.nextInt();
      }
      }
      System.out.println("Enter the elements of 2nd matrix row wise : n");
for (int i = 0; i < n; i++) {
for(int j = 0; j < n; j++) {
      m2[i][j] = input.nextInt();
}
}
System.out.println("Multiplying the matrices : ");
for(int i = 0; i < n; i++) {
for(int j = 0; j < n; j++) {
      for(int k = 0; k < n; k++) {
      mat[i][j] = mat[i][j] + m1[i][k] * m2[k][j];
      }
      }
      }	
      System.out.println("Product :");
for (int i = 0; i < n; i++) {
      for(int j = 0; j < n; j++) {
      System.out.print(mat[i][j] + " ");
      }
      System.out.println();
      }
      input.close();
      }
}

Output :
























5. Write Java program on use of inheritance, preventing inheritance using final, abstract classes.
Java program on use of inheritance

class Parent
{
public void p1()
{
System.out.println("Parent method");
}
}
public class Child extends Parent {
public void c1()
{
System.out.println("Child method");
}
public static void main(String[] args)
{
Child cobj = new Child();
cobj.c1();   //method of Child class
cobj.p1();   //method of Parent class
}
}
Output :



Preventing inheritance using final

final class DataV1 {

}

class DataV2 extends DataV1{

}

public class Javaapp {
public static void main(String[] args){
      DataV2 obj = new DataV2();
}
}
Output :



Abstract classes
abstract class A
{
abstract void callme();
}
class B extends A
{
void callme()
{
System.out.println("this is callme.");
}
public static void main(String[] args)
{
B b = new B();
b.callme();
}
}
Output :






6. Develop a program to demonstrate the method overloading .
import java.io.*;
class OverloadDemo
{
void test()
{
System.out.println("No parameters");
}
void test(int a)
{
System.out.println("a: " + a);
}
void test(int a, int b)
{
System.out.println("a and b: " + a + " " + b);
}
double test(double a)
{
System.out.println("double a: " + a);
return a*a;
}
}
class Test
{
public static void main( String ar[] )throws IOException
{
int ch ;
String s;
double result;
DataInputStream d = new DataInputStream( System.in );
OverloadDemo ob = new OverloadDemo();
do
{
System.out.println("MENU\n1.Call method with no parameters\n2.Call
method with one integer parameters");
System.out.println("3.Call method with two integer parameters\n4.Call
method with a double parameter");
System.out.println("5.Exit\nEnter youir choice:");
s = d.readLine();
ch = Integer.parseInt( s );
switch( ch )
{
case 1: ob.test();
break;
case 2: ob.test( 10 );
break;
case 3: ob.test( 10 , 20 );
break;
case 4: result = ob.test( 11.3654 );
System.out.println("Result = " + result );
break;
case 5: System.exit( 0 );
break;
default:System.out.println("Invalid choice!!!");
}
}while( ch != 5 );
}
}
OUTPUT :




















7. Develop a program to demonstrate method over-riding.
import java.io.*;
class Figure {
double dim1;
double dim2;
Figure()throws IOException {
String s;
DataInputStream g = new DataInputStream( System.in );
System.out.println("Enter the dimensions:");
s = g.readLine();
dim1 = Float.parseFloat( s );
s = g.readLine();
dim2 = Float.parseFloat( s );
}
double area() {
    System.out.println("Area for Figure is undefined,as we don't know the shape!");
    return 0;
}
}
class Rectangle extends Figure {
    Rectangle()throws IOException
    {
    super();
    }
// override area for rectangle
double area() {
    System.out.println("Inside Area for Rectangle.");
    return dim1 * dim2;
  }
}
class Triangle extends Figure {
    Triangle()throws IOException {
    super();
  }
// override area for right triangle
double area() {
    System.out.println("Inside Area for Triangle.");
return dim1 * dim2 / 2;
}
}
class FindAreas
{
public static void main( String ar[] )throws IOException
{
int ch;
String s;
Figure figref;
DataInputStream d = new DataInputStream( System.in );
OverloadDemo ob = new OverloadDemo();
do
{
System.out.println("\nMENU\n1.Find area of rectangle\n2.Find area of
triangle");
System.out.println("3.Find area of figure by super class method");
System.out.println("4.Exit\nEnter youir choice:");
s = d.readLine();
ch = Integer.parseInt( s );
switch( ch )
{
case 1: Rectangle r = new Rectangle();
figref = r;
System.out.println( "Area is " + figref.area() );
break;
case 2: Triangle t = new Triangle();
figref = t;
System.out.println( "Area is " + figref.area() );
break;
case 3: Figure f = new Figure();
figref = f;
System.out.println("Area is " + figref.area());
break;
case 4: System.exit( 0 );
break;
default:System.out.println("Invalid choice!!!");
}
}while( ch != 4 );
}
}

Output :
        

8. Develop a java application to implement currency converter (Dollar to INR, EURO to INR, Yen) using Interfaces.
import java.util.*;
import java.text.DecimalFormat;
public class CurrencyConverter {
public static void main(String[] args) {
double amount, dollar, pound, code, euro, yen, ringgit, rupee;
DecimalFormat f = new DecimalFormat("##.##");
Scanner sc = new Scanner(System.in);
System.out.println("hi, Welcome to the Currency Converter!");
System.out.println("which currency You want to Convert ? ");
System.out.println("1:Ruppe \t2:Dollar \t3:Pound \n4:Euro \t5:Yen \t6:Ringgit ");
code = sc.nextInt();
System.out.println("How much Money you want to convert ?");
amount = sc.nextFloat();
// For amounts Conversion
if (code == 1) {
dollar = amount / 70;
System.out.println("Your " + amount + " Rupee is : " + f.format(dollar) + " Dollar");
pound = amount / 88;
System.out.println("Your " + amount + " Rupee is : " + f.format(pound) + " Pound");
euro = amount / 80;
System.out.println("Your " + amount + " Rupee is : " + f.format(euro) + " Euro");
yen = amount / 0.63;
System.out.println("Your " + amount + " Rupee is : " + f.format(yen) + " Yen");
ringgit = amount / 16;
System.out.println("Your " + amount + " Rupee is : " + f.format(ringgit) + " ringgit");
} else if (code == 2) {
// For Dollar Conversion
rupee = amount * 70;
System.out.println("Your " + amount + " Dollar is : " + f.format(rupee) + " Ruppes");
pound = amount * 0.78;
System.out.println("Your " + amount + " Dollar is : " + f.format(pound) + " Pound");
euro = amount * 0.87;
System.out.println("Your " + amount + " Dollar is : " + f.format(euro) + " Euro");
yen = amount * 111.087;
System.out.println("Your " + amount + " Dollar is : " + f.format(yen) + " Yen");
ringgit = amount * 4.17;
System.out.println("Your " + amount + " Dollar is : " + f.format(ringgit) + " ringgit");
} else if (code == 3) {
// For Pound Conversion
rupee = amount * 88;
System.out.println("Your " + amount + " pound is : " + f.format(rupee) + " Ruppes");
dollar = amount * 1.26;
System.out.println("Your " + amount + " pound is : " + f.format(dollar) + " Dollar");
euro = amount * 1.10;
System.out.println("Your " + amount + " pound is : " + f.format(euro) + " Euro");
yen = amount * 140.93;
System.out.println("Your " + amount + " pound is : " + f.format(yen) + " Yen");
ringgit = amount * 5.29;
System.out.println("Your " + amount + " pound is : " + f.format(ringgit) + " ringgit");
} else if (code == 4) {
// For Euro Conversion
rupee = amount * 80;
System.out.println("Your " + amount + " euro is : " + f.format(rupee) + " Ruppes");

dollar = amount * 1.14;
System.out.println("Your " + amount + " euro is : " + f.format(dollar) + " Dollar");
pound = amount * 0.90;
System.out.println("Your " + amount + " euro is : " + f.format(pound) + " Pound ");
yen = amount * 127.32;
System.out.println("Your " + amount + " euro is : " + f.format(yen) + " Yen");
ringgit = amount * 4.78;
System.out.println("Your " + amount + " euro is : " + f.format(ringgit) + " ringgit");
} else if (code == 5) {
// For Yen Conversion
rupee = amount * 0.63;
System.out.println("Your " + amount + " yen is : " + f.format(rupee) + " Ruppes");
dollar = amount * 0.008;
System.out.println("Your " + amount + " yen is : " + f.format(dollar) + " Dollar");
pound = amount * 0.007;
System.out.println("Your " + amount + " yen is : " + f.format(pound) + " Pound");
euro = amount * 0.007;
System.out.println("Your " + amount + " yen is : " + f.format(euro) + " Euro");
ringgit = amount * 0.037;
System.out.println("Your " + amount + " yen is : " + f.format(ringgit) + " ringgit");
} else if (code == 6) {
// For Ringgit Conversion
rupee = amount * 16.8;
System.out.println("Your " + amount + " ringgit is : " + f.format(rupee) + " Ruppes");
dollar = amount * 0.239;
System.out.println("Your " + amount + " ringgit is : " + f.format(dollar) + " dollar");
pound = amount * 0.188;
System.out.println("Your " + amount + " ringgit is : " + f.format(pound) + " pound");
euro = amount * 0.209;
System.out.println("Your " + amount + " ringgit is : " + f.format(euro) + " euro");
yen = amount * 26.63;
System.out.println("Your " + amount + " ringgit is : " + f.format(yen) + " yen");
} else {
System.out.println("Invalid input");
}
System.out.println("Thank you for choosing our Example Programs");
}
}
Output:
	















9. Write Java program that inputs 5 numbers, each between 10 and 100 inclusive. As each number is   read display it only if it's not a duplicate of any number already read display the complete set of   unique values input after the user enters each new value.
   Program :
import java.util.*;
public class Test {
public static void main(String[] args) {
int i=0;
int digit[]=new int[100];
Scanner input=new Scanner(System.in);
do{
System.out.println((i+1)+ "number=");
int n=input.nextInt();
if(Isthereanelement(digit, n)==false)
{
digit[i]=n;
i++;
}
else if(Isthereanelement(digit,n)==true)
{
System.out.println("The numbers entered are the same");
}
}while(i<5);
}
private static boolean Isthereanelement(int digit[], int n)
{
for (int i = 0; i < digit.length; i++)
{
if(digit[i]==n)
{
return true;
}
}
return false;
}
}




Output :















10. Write a Java Program to create an abstract class named Shape that contains two integers and an empty method named print Area(). Provide three classes named Rectangle, Triangle and Circle such that each one of the classes extends the class Shape. Each one of the classes contains only the method print Area () that prints the area of the given shape.

import java.util.*; 
abstract class Shapes
{
double a,b;
abstract void printArea();
}
class Rectangle extends Shapes
{
void printArea()
{
System.out.println("\t\tCalculating Area of Rectangle"); Scanner input=new Scanner(System.in); System.out.print("Enter length: "); a=input.nextDouble();
System.out.print("\nEnter breadth: "); b=input.nextDouble();
double area=a*b;
System.out.println("Area of Rectangle: "+area);
}
}
class Triangle extends Shapes
{
void printArea()
{
System.out.println("\t\tCalculating Area of Triangle"); Scanner input=new Scanner(System.in); System.out.print("Enter height: "); a=input.nextDouble();
System.out.print("\nEnter breadth: "); b=input.nextDouble();
double area=0.5*a*b; System.out.println("Area of Triangle: "+area);
}
}
class Circle extends Shapes
{
void printArea()
{
System.out.println("\t\tCalculating Area of Circle"); Scanner input=new Scanner(System.in); System.out.print("Enter radius: "); a=input.nextDouble();
double area=3.14*a*a; System.out.println("Area of Circle: "+area);
}
}
class AbstractClassDemo
{
public static void main(String[] args)
{
Shapes obj;
obj=new Rectangle(); obj.printArea(); obj=new Triangle(); obj.printArea(); obj=new Circle(); obj.printArea();
}
}

Output :



























11. Write a java program that reads a file and displays the file on the screen with line number before  each line.
   Program :
import java.util.*;
import java.io.*;
class Rfile
{
public static void main(String args[])throws IOException
{
int j=1;
char ch;
Scanner scr=new Scanner(System.in);
System.out.print("\nEnter File name: ");
String str=scr.next();
FileInputStream f=new FileInputStream(str);
System.out.println("\nContents of the file are");
int n=f.available();
System.out.print(j+": ");
for(int i=0;i<n;i++)
{
ch=(char)f.read();
System.out.print(ch);
if(ch=='\n')
{
System.out.print(++j+": ");

}

}
}
}
	
Text File :


Output :
	




























12. Write a java program to split a given text file into n parts. Name each part as the name of the original file followed by .part where n is the sequence number of the part file.
import java.io.*;
import java.util.Scanner;
class FileSpliter {
    public static void main(String args []){
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter n - to splitin n parts : ");
		int count =0 ,n = sc.nextInt();
		try {
			File f = new File("TEXTFILE.txt");
			Scanner sc2 = new Scanner(f);
			while(sc2.hasNextLine()) {
				sc2.nextLine();
				count++;
			}
		}
		catch (FileNotFoundException e){
			System.out.println("Error File NOT Found");
		}
      
      int m = count/n;
      System.out.println("Each File will contain "+m+" lines");
        	
      try {
		File f = new File("TEXTFILE.txt");
			Scanner sc2 = new Scanner(f);
			for(int i =0;i<n;i++){
				File f2 = new File("TEXTFILE."+i);
				if(f2.createNewFile()){
					FileWriter fw = new FileWriter("TEXTFILE."+i);
					for(int j =0;j<m;j++){fw.write(sc2.nextLine());}
					fw.close();
					System.out.println("File "+i+" Created Succesfully");
				}
			}
			FileWriter fw = new FileWriter("TEXTFILE."+n);
			for(int i =(n*m);i <= count - (n*m);i++){
					fw.write(sc2.nextLine());
			}
			fw.close();
			System.out.println("Files Created Succesfully");
        	} catch (IOException e) {
            System.out.println("Error File NOT created");    }
    }
}

Before :

Execution - Output  :
	


After : Text file splited
	






13. Write a Java program that takes input from user through a GUI and performs arithmetic operations and outputs the answer through a custom GUI.
import java.util.*;
       import java.awt.*;   
       import java.lang.Double;
       import javax.swing.*;       
     public class AdditionApplet extends JApplet
                   {
           double sum;  
       public void init()
             {
          String firstNumber;   
          String secondNumber;  
          double number1;       
          double number2;       
              // obtain first number from user
          firstNumber = JOptionPane.showInputDialog("Enter first floating-point value");
          secondNumber = JOptionPane.showInputDialog("Enter second floating-point value");
          number1=Double.parseDouble(firstNumber);      
          number2=Double.parseDouble(secondNumber);     
 // add numbers          
          sum = number1 + number2;
                } // end method init
           // draw results in a rectangle on applet's background
     public void paint(Graphics g)
               {
          // call superclass version of method paint
          super.paint(g);
              // draw rectangle starting from (15, 10) that is 270 
          // pixels wide and 20 pixels tall
          g.drawRect( 15, 10, 270, 20 );
              // draw results as a String at (25, 25)     
          g.drawString( "The sum is " + sum, 25, 25 );
               } // end method paint
             } // end class AdditionApplet

HTML CODE:-
<html>
 <applet code = "AdditionApplet.class" width = "300" height = "65">
</applet>
</html>


Output :

                 

         
       
      

14. Write a Java program that allows you to add and remove items from a JComboBox using user input
import javax.swing.*;
import java.awt.event.*;
public class AddRemoveItemFromCombo{
    JComboBox combo;
    JTextField txtBox;
    public static void main(String[] args){
        AddRemoveItemFromCombo ar = new AddRemoveItemFromCombo();
    }
    public AddRemoveItemFromCombo(){
        JFrame frame = new JFrame("Add-Remove Item of a Combo Box");
        String items[] = {"Java", "JSP", "PHP", "C", "C++"};
        combo = new JComboBox(items);
        JButton button1 = new JButton("Add");
        txtBox = new JTextField(20);
        button1.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                if (!txtBox.getText().equals("")){
                    int a = 0;
                    for(int i = 0; i < combo.getItemCount(); i++){
                        if(combo.getItemAt(i).equals(txtBox.getText())){
                            a = 1;
                            break;
                        }
                    }if (a == 1)
                        JOptionPane.showMessageDialog(null,"Combo has already this item.");
                    else
                        combo.addItem(txtBox.getText());
                }
                else{
                    JOptionPane.showMessageDialog(null,"Please enter text in Text Box");
                }
            }
        });
        JButton button2 = new JButton("Remove");
        button2.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                if (combo.getItemCount() > 0)
                    combo.removeItemAt(0);
                else
                    JOptionPane.showMessageDialog(null,"Item not available");
            }
        });
        JPanel panel = new JPanel();
        JPanel panel1 = new JPanel();
        panel.add(txtBox);
        panel.add(combo);
        panel.add(button1);
        panel.add(button2);
        frame.add(panel);
//  frame.add(panel1);
        frame.setSize(400, 400);
        frame.setVisible(true);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }
}
Output :

Before Adding 'Perl' :   				After Adding 'Perl' :
    		 
Removing an Combo :
	

Removing all combo s :
	









15. Write a Java program that creates three threads. First thread displays ?Good Morning every one second, the second thread displays ?Hello every two seconds and the third thread displays   ?Welcome every three seconds.

Program :
class A implements Runnable
{
Thread thrd;
// Construct a new thread.
A(String name) {
thrd = new Thread(this, name);
thrd.start(); // start the thread
}
synchronized public void run()
{
try{
while(true)
{
Thread.sleep(1000);
System.out.println("good morning");
}
}
catch(Exception e)
{
System.out.println(thrd.getName() + " interrupted.");
}
}
}
class B implements Runnable
{
Thread thrd;
// Construct a new thread.
B(String name) {
thrd = new Thread(this, name);
thrd.start(); // start the thread
}
synchronized public void run()
{
try{
while(true){
Thread.sleep(2000);
System.out.println("hello");
}
}
catch(Exception e)
{
System.out.println(thrd.getName() + " interrupted.");
}
}
}
class C implements Runnable
{
Thread thrd;
// Construct a new thread.
C(String name) {
thrd = new Thread(this, name);
thrd.start(); // start the thread
}
synchronized public void run()
{
try{
while(true)
{
Thread.sleep(3000);
System.out.println("welcome");
}
}
catch(Exception e)
{
System.out.println(thrd.getName() + " interrupted.");
}
}
}
class ThreadDemo
{
public static void main(String args[]){
A t1=new A("thread1");
B t2=new B("thread2");
C t3=new C("thread3");
}
}








Output :
	

2


